syntax = "proto3";

package crea.users.v1;
option go_package = "github.com/igomonov88/creaapis-genproto-go/creaapis/ms-users/v1;users";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";


service UserService {
  option (google.api.default_host) = "users.crea.ru";

  rpc CreateUser(User) returns (User) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  }

  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/v1/users/{id}"
    };
  }

  rpc UpdateUser(User) returns (User) {
    option (google.api.http) = {
      put: "/v1/users/{id}"
      body: "*"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/users/{id}"
    };
  }
}

message User {
  option (google.api.resource) = {
    type: "users.creaapis.com/User"
    pattern: "users/{user_id}"
  };

  int64 user_id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  string name = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "users.creaapis.com/User"
    }
  ];

  string family_name = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "users.creaapis.com/User"
    }
  ];

  string email = 4 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "users.creaapis.com/User"
    }
  ];

  string phone = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "users.creaapis.com/User"
    }
  ];
}

// Container for enum describing possible customer errors.
message UsersErrorEnum {
  // Set of errors that are related to requests dealing with User.
  enum CustomerError {
    // Enum unspecified.
    UNSPECIFIED = 0;

    // The received error code is not known in this version.
    UNKNOWN = 1;

    // User email address is not specified.
    EMAIL_NOT_SPECIFIED = 2;

    // User email address is invalid.
    FIRST_NAME_NOT_SPECIFIED = 3;

    // User email address is invalid.
    LAST_NAME_NOT_SPECIFIED = 4;

    // User email address is invalid.
    PHONE_NUMBER_NOT_SPECIFIED = 5;
  }
}

message GetUserRequest {
  string id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "users.creaapis.com/User"
    }
  ];
}

message UpdateUserRequest {
  // Required. The user which will (partially) replace the current value.
  User user = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteUserRequest {
  // Required. The unique name of the coupon to be deleted. Values are of the form
  // `users/{user_id}`.
  string user_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "users.creaapis.com/Uoupon"
    }
  ];
}